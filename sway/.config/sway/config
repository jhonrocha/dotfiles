# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
set $menu wofi --show drun -a
# GAPS
set $gIn 8
set $gOut 0
set $gVert 200
set $gHorz 600
# UI
set $bg #171717
set $fg #eff1f5
set $br #ff69b4
set $ia #232425
set $id #FFFFFF
focus_on_window_activation focus
#
# Basic
#
default_border pixel 1
default_floating_border pixel 1
smart_borders on
# class                 border      backgr.     text    indicator child_border
client.focused          #c678dd     #c678dd     $fg     $id       $br
client.unfocused        #000000     #000000     $fg     $id       #000000
# Mouse follow
focus_follows_mouse no
floating_modifier $mod normal
# Window Rules
for_window {
  [app_id="zoom"] floating enable
  [class="zoom"] floating enable
  [class="Vial"] floating enable
  [app_id="pavucontrol"] floating enable
  [class="Ferdium"] floating enable, move scratchpad, scratchpad show, resize set width 90 ppt height 90 ppt, move position center
  [app_id="Slack"] floating enable, move scratchpad, scratchpad show
  [app_id="termpad"] move scratchpad,  scratchpad show, resize set width 70 ppt height 90 ppt, move position center
  [class="GalaxyBudsClient"] floating enable
  [class="galaxybudsclient"] floating enable
  [app_id="Spotify"] floating enable
}
# Font
font Cantarell 0
# Gaps
gaps inner $gIn
# gaps horizontal $gHorz
# gaps vertical $gVert
#
# Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $(find ~/.config/wallpapers/ -type f | shuf -n 1) fill
# output HDMI-A-2 pos 0 -1440
# output DP-3 pos 0 0
output DP-1 scale 2
output DP-2 scale 2

#
# Input configuration
#
input type:keyboard {
  xkb_file "~/.config/xkb/xkbmap"
  xkb_options "caps:swapescape"
}

input type:pointer {
  accel_profile adaptive
  pointer_accel 1.0
}

input type:mouse {
  accel_profile adaptive
  pointer_accel 1.0
}

input type:touchpad {
  tap enabled
  accel_profile adaptive
  pointer_accel 0.5
}
# You can get the names of your inputs by running: swaymsg -t get_inputs
#
# Key bindings
#
# Apps
mode "apps" {
  bindsym a exec 'swaymsg [class="Emacs"] focus || emacs --with-profile=doom'; mode "default"
  bindsym s exec 'swaymsg [app_id="$term"] focus || $term'; mode "default"
  bindsym f exec 'swaymsg [class="Brave-browser"] focus || brave'; mode "default"
  bindsym g exec jhbrowser; mode "default"
  bindsym e exec "kitty lf"; mode "default"
  bindsym i exec "$term htop"; mode "default"
  bindsym y exec jhsync; mode "default"
  bindsym b exec "$term nvim ~/.config/favs.txt"; mode "default"
  bindsym u unmark; mode "default"
# Change Wallpaper
  bindsym w output * bg $(find ~/.config/wallpapers/ -type f | shuf -n 1) fill
  bindsym Shift+w output * bg $(find ~/.config/anime/ -type f | shuf -n 1) fill
# Screenshot
  bindsym p exec flameshot gui; mode "default"
  # bindsym p exec 'grim -g "$(slurp)" - | swappy -f -'; mode "default"
  bindsym Shift+p exec import -frame -window "$(xdo id)" ~/Pictures/screenshot_$(date +%s).png; mode "default"
# Return to default mode
  bindsym Return mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+space mode "apps"

# Gaps
mode "gaps" {
# Vertical/Horizontal
  bindsym h gaps horizontal current plus  10
  bindsym l gaps horizontal current minus 10
  bindsym j gaps vertical current plus  10
  bindsym k gaps vertical current minus 10
# Inner
  bindsym u gaps inner current minus 5
  bindsym i gaps inner current plus  5
  bindsym Shift+u gaps inner all minus 5
  bindsym Shift+i gaps inner all plus  5
# Outer
  bindsym o gaps outer current minus 5
  bindsym p gaps outer current plus  5
  bindsym Shift+o gaps outer all minus 5
  bindsym Shift+p gaps outer all plus  5
# Setups
  bindsym equal gaps outer all set $gOut; gaps inner all set $gIn; mode "default"
  bindsym Shift+equal gaps outer current set $gOut; gaps inner current set $gIn; mode "default"
  bindsym 0 gaps outer all set 0; gaps inner all set 0; mode "default"
  bindsym Shift+0 gaps outer current set 0; gaps inner current set 0; mode "default"
  bindsym 1 gaps outer all set 100; gaps inner current set $gIn; mode "default"
  bindsym Shift+1 gaps outer current set 100; gaps inner current set $gIn; mode "default"
# Return to default mode
  bindsym Return mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+g mode "gaps"

# Resizing containers:
mode "resize" {
# left will shrink the containers width
# right will grow the containers width
# up will shrink the containers height
# down will grow the containers height
  bindsym $left resize shrink width 10px
  bindsym $down resize grow height 10px
  bindsym $up resize shrink height 10px
  bindsym $right resize grow width 10px

# Ditto, with arrow keys
  bindsym Left resize shrink width 10px
  bindsym Down resize grow height 10px
  bindsym Up resize shrink height 10px
  bindsym Right resize grow width 10px

# Return to default mode
  bindsym Return mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+x mode "resize"

bindsym $mod+s sticky toggle

# Basics:
# Start a terminal
bindsym $mod+Return exec $term
# Ferdium ScratchPad
bindsym $mod+u exec 'swaymsg "[app_id=Slack]" scratchpad show || slack --enable-features=WaylandWindowDecorations,WebRTCPipeWireCapturer --ozone-platform-hint=auto'
# Terminal ScratchPad
bindsym $mod+i exec 'swaymsg "[app_id=termpad]" scratchpad show || $term --class termpad'

# Kill focused window
bindsym $mod+F4 kill
bindsym $mod+q kill

# Start your launcher
bindsym $mod+d exec $menu
bindsym $mod+r exec wofi --show run

# Clean notifications
bindsym $mod+0 exec makoctl dismiss -a

# Reload the configuration file
bindsym $mod+z reload
bindsym $mod+Shift+z exit

# Exit sway (logs you out of your Wayland session)
# bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will
# end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Monitos
bindsym $mod+Mod1+h move workspace to output left
bindsym $mod+Mod1+l move workspace to output right

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9

# Next/Prior
bindsym $mod+o workspace prev_on_output
bindsym $mod+p workspace next_on_output
bindsym $mod+Tab workspace back_and_forth

# Layout stuff:
bindsym $mod+w splith
bindsym $mod+e splitv

# Switch the current container between different layout styles
bindsym $mod+Shift+q layout stacking
bindsym $mod+Shift+w layout tabbed
bindsym $mod+Shift+e layout toggle split

# Toggle the current focus between tiling and floating mode
bindsym $mod+f floating toggle
# Swap focus between the tiling area and the floating area
bindsym $mod+t focus mode_toggle
# Make the current focus fullscreen
bindsym $mod+Shift+f fullscreen
# bindsym $mod+b bar mode toggle
bindsym $mod+b bar mode invisible
bindsym $mod+Shift+b bar mode dock

# Media Control
bindsym $mod+F1 exec xbacklight -dec 10
bindsym $mod+F2 exec xbacklight -inc 10
bindsym $mod+dead_acute exec playerctl play-pause
bindsym $mod+bracketleft exec playerctl previous
bindsym $mod+bracketright exec playerctl next
bindsym $mod+comma exec playerctl previous
bindsym $mod+period exec playerctl next
bindsym $mod+F9 exec pavucontrol
bindsym $mod+minus exec volume -5%
bindsym $mod+equal exec volume +5%
bindsym $mod+n exec volume -5%
bindsym $mod+m exec volume +5%
bindsym $mod+Shift+minus exec volume -2%
bindsym $mod+Shift+plus exec volume +2%

# Scratchpad:
bindsym $mod+Shift+y move scratchpad
bindsym $mod+y scratchpad show
bindsym $mod+Control+1 exec "wm-scratch mark1"
bindsym $mod+Control+2 exec "wm-scratch mark2"
bindsym $mod+Control+3 exec "wm-scratch mark3"
bindsym $mod+Control+4 exec "wm-scratch mark4"
bindsym $mod+Control+5 exec "wm-scratch mark5"
bindsym $mod+Control+6 exec "wm-scratch mark6"
bindsym $mod+Control+7 exec "wm-scratch mark7"
bindsym $mod+Control+8 exec "wm-scratch mark8"
bindsym $mod+Control+9 exec "wm-scratch mark9"

# Status bar
bar {
  position top
  swaybar_command waybar
}
include /etc/sway/config.d/*

# Initializing
# exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
# exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP SWAYSOCK
# exec dbus-update-activation-environment --all
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec mako
# exec_always nm-applet &

