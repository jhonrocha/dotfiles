#     _ _     ____            _           
#    | | |__ |  _ \ ___   ___| |__   __ _ 
# _  | | '_ \| |_) / _ \ / __| '_ \ / _` |
#| |_| | | | |  _ < (_) | (__| | | | (_| |
# \___/|_| |_|_| \_\___/ \___|_| |_|\__,_|

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# turn off monitor 1
super + alt + semicolon
  xrandr --output eDP-1 --off && \
  $HOME/.config/bspwm/bspwmrc

# close and kill
super + {q,w}
	bspc node -{k,c}

# alternate between the tiled and monocle layout
super + @space
	bspc desktop -l next

super + shift + @space
  bspc node @parent -R 90

# Remove polybar
super + b
  polybar-msg cmd hide && \
  bspc config top_padding 0 
  
# Show polybar
super + v
  polybar-msg cmd show && \
  bspc config top_padding 25

# send the newest marked node to the newest preselected node
# super + shift + y
#	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
# super + g
#	bspc node -s biggest

#
# state/flags
#

# set the window state
super + alt + {u,i,o,p}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
#super + ctrl + {m,x,n,z}
#	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + ctrl + {m,n,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {u,i}
	bspc node -f {next,prev}.leaf.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the next/previous desktop in the current monitor
super + {o,p}
	bspc desktop -f {prev,next}.local.occupied

# focus the last node/desktop
super + {Tab,Escape}
	bspc {node,desktop} -f last.local

# focus the older or newer node in the focus history
super + shift + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} focused:'^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}

# receptacles the direction
super + t
	bspc node -i

# kill receptacles
super + shift + t
  bspc query -N -n '.leaf.!window.local' | xargs -I id bspc node id -k

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + alt + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + ctrl + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# change rotation
super + shift + w
	bspc node -n 'last.!automatic.local'

#
# Minimize
#
# minimize active
super + m
  bspc node -g hidden
# maximize all
super + shift + m
  bspc query -N -n '.leaf.local.hidden' | xargs -r -I pid bspc node pid -g hidden --focus
# maximize all on this desktop
super + n
  bspc query -N -n '.leaf.local.hidden' | xargs -r -I pid xwininfo -id pid | sed -n 's/xwininfo: Window id: //p' | rofi -dmenu | cut -d' ' -f1 | xargs -r -I pid bspc node pid -g hidden --focus
#
# gaps
#
# change window gap at run time
super + {equal,minus}
  bspc config window_gap $((`bspc config window_gap` {+,-} 1 ))

# change window gap at run time
super + shift + {equal,minus}
  bspc config window_gap $((`bspc config window_gap` {+,-} 10 ))

# Restore original gap
super + alt + equal
  bspc config window_gap 5

# Restore original gap
super + alt + 9
  bspc config borderless_monocle false && \
  bspc config gapless_monocle false

# Fullscreen
super + alt + 0
  bspc config borderless_monocle true && \
  bspc config gapless_monocle true && \
  bspc desktop -l monocle 

# change window gap at run time
super + {Next,Prior}
  bspc config border_width $((`bspc config border_width` {-,+} 1))

# Restore original gap
super + Home
  bspc config border_width 2
